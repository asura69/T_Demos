package com.org.demo.HibDemo2;
import java.util.ArrayList;    

import java.util.ArrayList;

import org.hibernate.HibernateException;
import org.hibernate.Session;  
import org.hibernate.SessionFactory;  
import org.hibernate.Transaction;  
//import org.hibernate.boot.Metadata;  
//import org.hibernate.boot.MetadataSources;  
import org.hibernate.boot.registry.StandardServiceRegistry;  
import org.hibernate.boot.registry.StandardServiceRegistryBuilder;
import org.hibernate.cfg.Configuration;
import org.hibernate.metadata.ClassMetadata;
import org.hibernate.service.ServiceRegistry;  
public class App 
{
	static Session sessionObj;
    static SessionFactory sessionFactoryObj;
 
    //private static SessionFactory buildSessionFactory() {
        // Creating Configuration Instance & Passing Hibernate Configuration File
       /* Configuration configObj = new Configuration();
        configObj.configure("hibernate.cfg.xml");
 
        // Since Hibernate Version 4.x, ServiceRegistry Is Being Used
        ServiceRegistry serviceRegistryObj = new StandardServiceRegistryBuilder().applySettings(configObj.getProperties()).build(); 
 
        // Creating Hibernate SessionFactory Instance
        sessionFactoryObj = configObj.buildSessionFactory(serviceRegistryObj);
        return sessionFactoryObj;}*/
    public static void main( String[] args ) throws HibernateException
    {
        System.out.println( "Hello World! HibDemo2" );
      /*  StandardServiceRegistry ssr=new StandardServiceRegistryBuilder().configure("hibernate.cfg.xml").build();  
        org.hibernate.metamodel.Metadata meta=new org.hibernate.metamodel.MetadataSources(ssr).getMetadataBuilder().build();  
          
        SessionFactory factory=((org.hibernate.metamodel.Metadata) meta).getSessionFactoryBuilder().build();  
        Session session=factory.openSession();  
        sessionObj = buildSessionFactory().openSession();
        sessionObj.beginTransaction();*/
        System.out.println("Hibernate one to many (Annotation)");
    	Session session = HibernateUtil.getSessionFactory().openSession();

    	session.beginTransaction();

      //  Transaction t=session.beginTransaction();    
        
        
        Answer ans1=new Answer();    
        ans1.setAnswername("Java is a programming language");    
        ans1.setPostedBy("Ravi Malik");    
            
        Answer ans2=new Answer();    
        ans2.setAnswername("Java is a platform");    
        ans2.setPostedBy("Sudhir Kumar");    
            
        Answer ans3=new Answer();    
        ans3.setAnswername("Servlet is an Interface");    
        ans3.setPostedBy("Jai Kumar");    
            
        Answer ans4=new Answer();    
        ans4.setAnswername("Servlet is an API");    
        ans4.setPostedBy("Arun");    
            
        ArrayList<Answer> list1=new ArrayList<Answer>();    
        list1.add(ans1);    
        list1.add(ans2);    
            
        ArrayList<Answer> list2=new ArrayList<Answer>();    
        list2.add(ans3);    
        list2.add(ans4);    
            
        Question question1=new Question();    
        question1.setQname("What is Java?");    
        question1.setAnswers(list1);    
        
        Question question2=new Question();    
        question2.setQname("What is Servlet?");    
        question2.setAnswers(list2);    
            
        sessionObj.persist(question1);    
        sessionObj.persist(question2);    
            
        ((Transaction) sessionObj).commit();    
        sessionObj.close();    
        System.out.println("success");    
    }    
            
            
     
    }

